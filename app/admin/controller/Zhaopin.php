<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/10/8
 * Time: 14:59
 */

namespace app\admin\controller;
use app\admin\model\AdminCompany;
use app\admin\model\AdminUser;
use app\admin\model\ZhaopinCat as CatModel;
use app\admin\model\ZhaopinItem as ItemModel;
use app\admin\model\Region;
use app\common\ip\Ip;
use app\admin\model\UserInfo as UserInfoModel;


class Zhaopin extends Admin
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $ip_arr = Ip::find(get_ip());
        $ip_region = [
            'p' => $ip_arr[4] ? substr($ip_arr[4],0,2) : 0,
            'c' => $ip_arr[4] ? substr($ip_arr[4],0,4) : 0,
        ];
        $this->assign('province', Region::getProvince($ip_region['p']));
        $this->assign('ip_region', $ip_region);
        $this->assign('education_type', UserInfoModel::getEducationOption());
        $this->assign('experience_type', UserInfoModel::getExperienceOption());
    }

    public function index($q = '')
    {
        if ($this->request->isAjax()) {
            $where = $data = [];
            $page = input('param.page/d', 1);
            $limit = input('param.limit/d', 20);

            $cat_id = input('param.cat_id/d');
            if ($cat_id){
                $where['cat_id'] = $cat_id;
            }
            $name = input('param.title');
            if ($name) {
                $where['title'] = ['like', "%{$name}%"];
            }
            $province = input('param.province/d');
            if ($province) {
                $where['region_code'] = ['like', "{$province}%"];
            }
            $city = input('param.city/d');
            if ($city) {
                $where['region_code'] = ['like', "{$city}%"];
            }

            $where['cid'] = session('admin_user.cid');
            $order = "status desc,sort asc";
            $data['data'] = ItemModel::with('cat')->where($where)->order($order)->page($page)->limit($limit)->order('id desc')->select();
            if ($data['data']){
                $education = config('develop.education');
                $experience = config('tb_system.experience');
                foreach ($data['data'] as $k=>$v){
                    if ($v['attachment']){
                        $t = array_filter(explode(',',$v['attachment']));
                        $data['data'][$k]['attachment'] = $t[0];
                    }
                    $data['data'][$k]['user_name'] = AdminUser::getUserById($v['user_id'])['realname'];
                    $data['data'][$k]['region_name'] = Region::getCityName($v['region_code']);
                    $data['data'][$k]['education'] = $education[$v['education']];
                    $data['data'][$k]['experience'] = $experience[$v['experience']];
                }
            }
            $data['count'] = ItemModel::where($where)->count('id');
            $data['code'] = 0;
            $data['msg'] = '';
            return json($data);
        }

        $this->assign('cat_option',ItemModel::getOption());
        return $this->fetch('item');
    }
    public function addItem()
    {
        if ($this->request->isPost()) {
            $data = $this->request->post();
            if (empty($data['city'])){
                return $this->error('请选择城市');
            }
            $data['region_code'] = $data['city'];
            $data['cid'] = session('admin_user.cid');
            $data['user_id'] = session('admin_user.uid');
            unset($data['id'],$data['province'],$data['city']);
            // 验证
            $result = $this->validate($data, 'ZhaopinItem');
            if($result !== true) {
                return $this->error($result);
            }
            if (!ItemModel::create($data)) {
                return $this->error('添加失败');
            }
            return $this->success("操作成功{$this->score_value}");
        }
        $this->assign('cat_option',ItemModel::getOption(1));
        return $this->fetch('itemform');
    }

    public function editItem($id = 0)
    {
        if ($this->request->isPost()) {
            $data = $this->request->post();
            if (empty($data['city'])){
                return $this->error('请选择城市');
            }
            $data['region_code'] = $data['city'];
            $data['cid'] = session('admin_user.cid');
            $data['user_id'] = session('admin_user.uid');
            unset($data['province'],$data['city']);
            // 验证
            $result = $this->validate($data, 'ZhaopinItem');
            if($result !== true) {
                return $this->error($result);
            }
            if (!ItemModel::update($data)) {
                return $this->error('修改失败');
            }
            return $this->success('修改成功');
        }

        $row = ItemModel::where('id', $id)->find()->toArray();
        $row['content'] = htmlspecialchars_decode($row['content']);
        $this->assign('data_info', $row);
        $this->assign('cat_option',ItemModel::getOption(1));
        return $this->fetch('itemform');
    }

    public function read($id = 0)
    {
        $row = ItemModel::where('id', $id)->find()->toArray();
        if ($row['attachment']){
            $t = array_filter(explode(',',$row['attachment']));
            $row['attachment'] = $t[0];
        }
        $row['content'] = htmlspecialchars_decode($row['content']);
        $row['company_name'] = AdminCompany::getCompanyById($row['cid'])['name'];
        $row['user_name'] = AdminUser::getUserById($row['user_id'])['realname'];
        $this->assign('data_list', $row);
        $this->assign('cat_option',ItemModel::getCat());
        return $this->fetch();
    }

    public function delItem()
    {
        $id = input('param.id/a');
        $model = new ItemModel();
        if (!$model->del($id)) {
            return $this->error($model->getError());
        }
        return $this->success('删除成功');
    }

    public function cat()
    {
        if ($this->request->isAjax()) {
            $where = $data = [];
            $page = input('param.page/d', 1);
            $limit = input('param.limit/d', 15);
            $keyword = input('param.keyword');
            if ($keyword) {
                $where['name'] = ['like', "%{$keyword}%"];
            }
            $where['cid'] = session('admin_user.cid');
            $data['data'] = CatModel::where($where)->page($page)->limit($limit)->select();
            $data['count'] = CatModel::where($where)->count('id');
            $data['code'] = 0;
            $data['msg'] = '';
            return json($data);
        }
        return $this->fetch();
    }

    public function addCat()
    {
        if ($this->request->isPost()) {
            $data = $this->request->post();

            $data['cid'] = session('admin_user.cid');
            $data['user_id'] = session('admin_user.uid');
            unset($data['id']);
            // 验证
            $result = $this->validate($data, 'ZhaopinCat');
            if($result !== true) {
                return $this->error($result);
            }
            if (!CatModel::create($data)) {
                return $this->error('添加失败');
            }
            return $this->success("操作成功{$this->score_value}");
        }
        return $this->fetch('catform');
    }

    public function editCat($id = 0)
    {
        if ($this->request->isPost()) {
            $data = $this->request->post();

            $data['cid'] = session('admin_user.cid');
            $data['user_id'] = session('admin_user.uid');
            // 验证
            $result = $this->validate($data, 'ZhaopinCat');
            if($result !== true) {
                return $this->error($result);
            }
            if (!CatModel::update($data)) {
                return $this->error('修改失败');
            }
            return $this->success('修改成功',url('cat'));
        }

        $row = CatModel::where('id', $id)->find()->toArray();
        $this->assign('data_info', $row);
        return $this->fetch('catform');
    }
    public function delCat()
    {
        $id = input('param.id/a');
        $model = new CatModel();
        if (!$model->del($id)) {
            return $this->error('此类别下有检查项，不能删除');
        }
        return $this->success('删除成功');
    }

}